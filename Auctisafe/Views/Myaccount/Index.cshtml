@model Auctisafe.Models.signupmaster

@{
    ViewBag.Title = "Index";
}
<style>
    .nice-select {
        display: none;
    }
</style>

@if (!string.IsNullOrEmpty(ViewBag.error) && ViewBag.error == "Account Successfully Created")
{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.all.min.js"></script>

    <script type="text/javascript">
        function showAlert(title, text) {
            Swal.fire({
                title: title,
                text: text,
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }
        showAlert("Account","@ViewBag.error");
    </script>
}
else if (!string.IsNullOrEmpty(ViewBag.error))
{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.all.min.js"></script>

    <script type="text/javascript">
        function showAlert(title, text) {
            Swal.fire({
                title: title,
                text: text,
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
        showAlert("Account", "@ViewBag.error");
    </script>

}

<div class="inner-banner">
    <div class="container">
        <h2 class="inner-banner-title wow fadeInLeft" data-wow-duration="1.5s" data-wow-delay=".2s">
            My account
        </h2>
        <nav aria-label="breadcrumb">
            <ul id="breadcrumb" class="breadcrumb">
                <li class="breadcrumb-item"><a href="https://www.bidout-wp.egenslab.com"> Home </a></li>
                <li class="active">My account</li>
            </ul>
        </nav>
    </div>
</div>

<div class="page-wrapper sec-mar">
    <div class="container">
        <article id="post-1408" class="post-1408 page type-page status-publish hentry">
            <div class="inner-post">
                <div class="woocommerce">
                    <div class="woocommerce-notices-wrapper"></div>

                    <div class="u-columns col2-set" id="customer_login">

                        <div class="u-column1 col-1">

                            <form method="" action="">
                            </form>

                            @*//Myaccount/Login*@
                        <form action="~/Myaccount/Login" method="post" id="loginform">
                            @*@using (Html.BeginForm("login", "Myaccount", FormMethod.Post))
        {
            @Html.AntiForgeryToken()*@
                            <h2>Login</h2>
                            <p class="woocommerce-form-row woocommerce-form-row--wide form-row form-row-wide">
                                <label for="username">
                                    Email address&nbsp;<span class="required">*</span>
                                </label>
                                <input type="email" required name="Email" class="woocommerce-Input woocommerce-Input--text input-text" />
                                @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "woocommerce-Input woocommerce-Input--text input-text", @id = "username" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                            </p>
                            <p class="woocommerce-form-row woocommerce-form-row--wide form-row form-row-wide">
                                <label for="password">Password&nbsp;<span class="required">*</span></label>
                                <input type="password" required name="Password" class="woocommerce-Input woocommerce-Input--text input-text" />

                                @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "woocommerce-Input woocommerce-Input--text input-text", @id = "password", Type = "password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@
                            </p>
                            @*<div class="g-recaptcha" data-sitekey="6LfFPCMpAAAAAJZy2ihQaiK5xhqWAoRF_e63STHW"></div>*@

                            <p class="form-row">

                                <input type="hidden" id="woocommerce-login-nonce" name="woocommerce-login-nonce"
                                       value="e24382cd07" /><input type="hidden" name="_wp_http_referer"
                                                                   value="/my-account/" /> <button type="submit"
                                                                                                   class="woocommerce-button button woocommerce-form-login__submit wp-element-button"
                                                                                                   name="login" value="Log in">
                                    Log in
                                </button>
                                <a href="~/MyAccount/ForgotPassword">Forgot Password</a>
                            </p>



                            @*}*@
                        </form>

                        </div>

                        <div class="u-column2 col-2">

                            <form method="post" action="~/Myaccount/Index" id="regform">
                                <h2>Register</h2>



                                <p class="woocommerce-form-row woocommerce-form-row--wide form-row form-row-wide">
                                    <label for="reg_email">
                                        Email address&nbsp;<span class="required">*</span>
                                    </label>
                                    <input type="email" name="Email" required class="woocommerce-Input woocommerce-Input--text input-text" />
                                    @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "woocommerce-Input woocommerce-Input--text input-text", @id = "reg_email" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@

                                </p>


                                <p class="woocommerce-form-row woocommerce-form-row--wide form-row form-row-wide">
                                    <label for="reg_password">Password&nbsp;<span class="required">*</span></label>
                                    <input type="password" name="Password" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                    @*@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "woocommerce-Input woocommerce-Input--text input-text", @id = "reg-password", Type = "password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })*@

                                </p>



                                <div class="show_if_seller">

                                    <div class="split-row form-row-wide">
                                        <p class="form-row form-group">
                                            <label for="first-name">
                                                First Name <span class="required">*</span>
                                            </label>
                                            <input type="text" name="First_name" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                            @*@Html.EditorFor(model => model.First_name, new { htmlAttributes = new { @class = "input-text" } })
                                                @Html.ValidationMessageFor(model => model.First_name, "", new { @class = "text-danger" })*@
                                        </p>

                                        <p class="form-row form-group">
                                            <label for="last-name">Last Name <span class="required">*</span></label>
                                            <input type="text" name="Last_name" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                            @*@Html.EditorFor(model => model.Last_name, new { htmlAttributes = new { @class = "input-text" } })
                                                @Html.ValidationMessageFor(model => model.Last_name, "", new { @class = "text-danger" })*@
                                        </p>
                                    </div>




                                    <p class="form-row form-group">
                                        <label for="last-name">CNIC<span class="required">*</span></label>
                                        <input type="text" name="CNIC" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                        @*@Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "input-text" } })
                                            @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })*@
                                    </p>
                                    <p class="form-row form-group">
                                        <label for="last-name">Address <span class="required">*</span></label>
                                        <input type="text" name="Address" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                        @*@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "input-text" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })*@
                                    </p>

                                    <p class="form-row form-group form-row-wide">
                                        <label for="shop-phone">Phone Number<span class="required">*</span></label>
                                        <input type="number" name="Phone_number" required class="woocommerce-Input woocommerce-Input--text input-text" />

                                        @*@Html.EditorFor(model => model.Phone_number, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Phone_number, "", new { @class = "text-danger" })*@
                                    </p>

                                </div>



                                <div class="woocommerce-privacy-policy-text">
                                    <p>
                                        Your personal data will be used to support your experience throughout this
                                        website, to manage access to your account, and for other purposes described
                                        in our <a href=""
                                                  class="woocommerce-privacy-policy-link" target="_blank">
                                            privacy
                                            policy
                                        </a>.
                                    </p>
                                </div>
                                <p id="error-message"></p>

                                <div class="g-recaptcha" data-sitekey="6LfFPCMpAAAAAJZy2ihQaiK5xhqWAoRF_e63STHW"></div>

                                <p class="woocommerce-form-row form-row">
                                    <input type="hidden" id="woocommerce-register-nonce"
                                           name="woocommerce-register-nonce" value="554da01833" /><input type="hidden"
                                                                                                         name="_wp_http_referer" value="/my-account/" /> <button type="submit"
                                                                                                                                                                 class="woocommerce-Button woocommerce-button button wp-element-button woocommerce-form-register__submit"
                                                                                                                                                                 name="register" value="Register">
                                        Register
                                    </button>
                                </p>


                            </form>

                        </div>

                    </div>

                </div>
            </div>
        </article>
    </div> <!-- end .container -->
</div>

<script id="link" src="https://www.google.com/recaptcha/api.js?explicit&hl=en" async defer></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.all.min.js"></script>
<script>



    function showLoadingSpinner() {
        document.getElementById('loadingSpinner').style.display = 'block';
    }

    function hideLoadingSpinner() {
        document.getElementById('loadingSpinner').style.display = 'none';
    }
    // script.js
    document.getElementById("regform").addEventListener("submit", function (event) {
        const recaptchaResponse = grecaptcha.getResponse();
        if (recaptchaResponse.length === 0) {
            event.preventDefault();
            //    document.getElementById("error-message").innerText = "Please complete the CAPTCHA.";
            showAlert("Account", "Please Complete the CAPTCHA")
        }
    });

    // Reset the error message when the user interacts with the form again
    document.querySelectorAll("input, textarea").forEach(function (element) {
        element.addEventListener("input", function () {
            document.getElementById("error-message").innerText = "";

        });
    });

    //document.getElementById("loginform").addEventListener("submit", function (event) {
    //    const recaptchaResponse = grecaptcha.getResponse();
    //    if (recaptchaResponse.length === 0) {
    //        event.preventDefault();
    //        //    document.getElementById("error-message").innerText = "Please complete the CAPTCHA.";
    //        showAlert("Account", "Please Complete the CAPTCHA")
    //    }
    //});

    $(document).ajaxStart(function () {
        showLoadingSpinner();
    });

    // Hide loader when all AJAX requests are complete
    $(document).ajaxStop(function () {
        hideLoadingSpinner();
    });
</script>




<script type="text/javascript">
    function showAlert(title, text) {
        Swal.fire({
            title: title,
            text: text,
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }

</script>